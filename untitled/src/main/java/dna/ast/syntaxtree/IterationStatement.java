//
// Generated by JTB 1.3.2
//

package dna.ast.syntaxtree;

/**
 * Grammar production:
 * f0 -> ( <WHILE> "(" Expression() ")" Statement() | <DO> Statement() <WHILE> "(" Expression() ")" ";" | <FOR> "(" [ Expression() ] ";" [ Expression() ] ";" [ Expression() ] ")" Statement() )
 */
public class IterationStatement implements Node {
   public NodeChoice f0;

   public IterationStatement(NodeChoice n0) {
      f0 = n0;
   }

   public void accept(dna.ast.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(dna.ast.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(dna.ast.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(dna.ast.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

